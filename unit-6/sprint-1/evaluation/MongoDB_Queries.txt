Mongo Query 1:
Write Mongo query to retrieve the documents from the payments collection with an amount lesser than or equal to 30.

 db.payments.find({amount:{$lte:30}})

Mongo Query 2:
Write Mongo query to retrieve orders sorted by order date in ascending order.

 db.orders.find().sort({order_date:1})

Mongo Query 3:
Write Mongo query to get the total number of orders count per customer ?

 db.orders.aggregate([{$group:{_id:"$customer_id","count":{$sum:1}}}])

Mongo Query 4:
Write Mongo query to find the average total of orders made by customers who live in California(CA).
The answer should be a with a key avgTotal and it's value should Integer not a Float.

db.orders.aggregate([
{$lookup:{from:"buyers",localField:"customer_id", foreignField:"_id",as:"buyer_info"}},
{$match:{"buyer_info.address.city":"California"}},
{$group:{_id:null,avgTotal:{$avg:"$total"}}},
{$project:{_id:0,avgTotal:{$toInt:"$avgTotal"}}}
])

Mongo Query 5:
Write Mongo query to find Most used payment Method as paymentMethod and the number of time it is used as count.

 db.payments.aggregate([{$group:{_id:"$paymentMethod",count:{$sum:1}}},{$sort:{count:-1}},{$limit:1}])

Mongo Query 6:
Write Mongo query to retrieve the ship_date and order_date of an order whose payment status is pending by payment _id.


db.payments.aggregate([
{$match:{paymentstatus:"pending"}},
{$lookup:{from:"orders",localField:"orderdtl_id",foreignField:"_id",as:"order_info"}},
{$unwind:"$order_info"},
{$project:{_id:0,order_date:"$order_info.order_date",ship_date:"$order_info.ship_date"}}
])